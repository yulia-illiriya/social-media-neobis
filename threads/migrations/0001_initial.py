# Generated by Django 4.2.4 on 2023-10-10 15:27

import cloudinary_storage.storage
import cloudinary_storage.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=280, verbose_name='Текст')),
                ('likes', models.PositiveBigIntegerField(blank=True, default=0, null=True, verbose_name='Лайки')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Время поста')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='threads.thread', verbose_name='Comment')),
            ],
            options={
                'verbose_name': 'thread',
                'verbose_name_plural': 'threads',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(storage=cloudinary_storage.storage.VideoMediaCloudinaryStorage(), upload_to='video/', validators=[cloudinary_storage.validators.validate_video])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('thread', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='threads.thread', verbose_name='Thread')),
            ],
            options={
                'verbose_name': 'video',
                'verbose_name_plural': 'videos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_text', models.CharField(max_length=280, verbose_name='Текст')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Репост сделан в')),
                ('is_repost', models.BooleanField(default=True, verbose_name='Репост или цитата')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote', to='threads.thread', verbose_name='Thread')),
                ('who_quoted', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='кто процитировал')),
            ],
            options={
                'verbose_name': 'Quote or repost',
                'verbose_name_plural': 'Quotes and reposts',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.URLField()),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='threads.thread', verbose_name='Thread')),
            ],
            options={
                'verbose_name': 'photo',
                'verbose_name_plural': 'photos',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='threads.thread')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('thread', 'user')},
            },
        ),
    ]
